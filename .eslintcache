[{"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\index.js":"1","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\App.js":"2","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\store\\index.js":"3","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\store\\reducer.js":"4","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\routes\\index.js":"5","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\login\\index.js":"6","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\login\\style.js":"7","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\home\\index.js":"8","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\platform\\index.js":"9","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\platform\\style.js":"10","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\about\\index.js":"11","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\privacy\\index.js":"12","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\use\\index.js":"13","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\article\\bloblist\\index.js":"14","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\personality\\bgmusic\\index.js":"15","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\personality\\bgwall\\index.js":"16","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\hoc\\router-auth\\index.js":"17","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\not-found\\index.js":"18","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\api\\user.js":"19","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\api\\request.js":"20","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\api\\config.js":"21","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\store\\constants.js":"22","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\store\\actionCreator.js":"23","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\home\\style.js":"24","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\components\\page-header\\index.js":"25","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\components\\page-header\\style.js":"26","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\article\\add-article\\index.js":"27","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\article\\add-article\\style.js":"28","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\api\\article.js":"29","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\article\\bloblist\\style.js":"30","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\api\\label.js":"31","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\article\\detail\\index.js":"32","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\article\\detail\\style.js":"33","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\article\\detail\\article-render\\index.js":"34","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\article\\detail\\article-render\\style.js":"35","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\article\\detail\\heading-block\\index.js":"36","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\article\\detail\\heading\\index.js":"37","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\components\\pic-upload\\index.js":"38","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\privacy\\style.js":"39","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\api\\persona.js":"40","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\personality\\bgmusic\\style.js":"41","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\personality\\bgmusic\\song-list\\index.js":"42","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\personality\\bgmusic\\song-list\\style.js":"43"},{"size":178,"mtime":1611734189815,"results":"44","hashOfConfig":"45"},{"size":649,"mtime":1613964945333,"results":"46","hashOfConfig":"45"},{"size":243,"mtime":1612084695787,"results":"47","hashOfConfig":"45"},{"size":319,"mtime":1613982184012,"results":"48","hashOfConfig":"45"},{"size":3274,"mtime":1613962891511,"results":"49","hashOfConfig":"45"},{"size":4356,"mtime":1616229515026,"results":"50","hashOfConfig":"45"},{"size":1175,"mtime":1611738441749,"results":"51","hashOfConfig":"45"},{"size":4536,"mtime":1615703182897,"results":"52","hashOfConfig":"45"},{"size":4922,"mtime":1615695733515,"results":"53","hashOfConfig":"45"},{"size":1906,"mtime":1613889702412,"results":"54","hashOfConfig":"45"},{"size":166,"mtime":1611839863003,"results":"55","hashOfConfig":"45"},{"size":2745,"mtime":1615885243650,"results":"56","hashOfConfig":"45"},{"size":153,"mtime":1611839819989,"results":"57","hashOfConfig":"45"},{"size":4774,"mtime":1615879982771,"results":"58","hashOfConfig":"45"},{"size":3055,"mtime":1616078397249,"results":"59","hashOfConfig":"45"},{"size":162,"mtime":1611840049768,"results":"60","hashOfConfig":"45"},{"size":3678,"mtime":1613314750330,"results":"61","hashOfConfig":"45"},{"size":155,"mtime":1611844188471,"results":"62","hashOfConfig":"45"},{"size":1015,"mtime":1615777646310,"results":"63","hashOfConfig":"45"},{"size":697,"mtime":1614224024036,"results":"64","hashOfConfig":"45"},{"size":253,"mtime":1613917299260,"results":"65","hashOfConfig":"45"},{"size":47,"mtime":1612083126773,"results":"66","hashOfConfig":"45"},{"size":166,"mtime":1615696281213,"results":"67","hashOfConfig":"45"},{"size":340,"mtime":1615700623332,"results":"68","hashOfConfig":"45"},{"size":241,"mtime":1612345714557,"results":"69","hashOfConfig":"45"},{"size":128,"mtime":1612345898542,"results":"70","hashOfConfig":"45"},{"size":7430,"mtime":1615807482939,"results":"71","hashOfConfig":"45"},{"size":320,"mtime":1615709788305,"results":"72","hashOfConfig":"45"},{"size":1814,"mtime":1615952723922,"results":"73","hashOfConfig":"45"},{"size":214,"mtime":1613305438794,"results":"74","hashOfConfig":"45"},{"size":219,"mtime":1613278137117,"results":"75","hashOfConfig":"45"},{"size":5762,"mtime":1619925033438,"results":"76","hashOfConfig":"45"},{"size":208,"mtime":1615949204471,"results":"77","hashOfConfig":"45"},{"size":1091,"mtime":1613889063635,"results":"78","hashOfConfig":"45"},{"size":21835,"mtime":1613881177914,"results":"79","hashOfConfig":"45"},{"size":644,"mtime":1613889109380,"results":"80","hashOfConfig":"45"},{"size":342,"mtime":1613888835949,"results":"81","hashOfConfig":"45"},{"size":4434,"mtime":1615807851064,"results":"82","hashOfConfig":"45"},{"size":329,"mtime":1615883078440,"results":"83","hashOfConfig":"45"},{"size":786,"mtime":1616078298101,"results":"84","hashOfConfig":"45"},{"size":125,"mtime":1616068199849,"results":"85","hashOfConfig":"45"},{"size":3177,"mtime":1616078384751,"results":"86","hashOfConfig":"45"},{"size":913,"mtime":1616074488436,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"g9esq9",{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"90"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"90"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\index.js",[],["182","183"],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\App.js",["184"],"import React, { memo, Suspense } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"@/store\";\r\nimport routes from \"@/routes\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport RouterAuth from \"@/hoc/router-auth\";\r\nimport { renderRoutes } from \"react-router-config\";\r\nimport Eloading from \"react-loading-dev\";\r\nexport default memo(function App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <Suspense fallback={<Eloading />}>\r\n          {/* <RouterAuth config={routes} /> */}\r\n          {renderRoutes(routes)}\r\n        </Suspense>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n});\r\n","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\store\\index.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\store\\reducer.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\routes\\index.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\login\\index.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\login\\style.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\home\\index.js",["185"],"import React, { memo, useEffect, useState } from \"react\";\r\nimport { Form, Input, InputNumber, Button, message, Upload } from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\n// api\r\nimport { getUserDetailInfo, getAvatarUrl } from \"@/api/user\";\r\nimport { FormWrapper } from \"./style\";\r\nimport { updateUserInfo, uploadAvatarAction } from \"../../api/user\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nexport default memo(function Home() {\r\n  const { userInfo } = useSelector(\r\n    (state) => ({\r\n      userInfo: state.userInfo,\r\n    }),\r\n    [shallowEqual]\r\n  );\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    createAt: \"\",\r\n    email: \"\",\r\n    age: 0,\r\n    websiteName: \"\",\r\n    qq: \"\",\r\n    github: \"\",\r\n    avatarUrl: \"\",\r\n  });\r\n  const layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    _getUserDetailInfo();\r\n  }, []);\r\n  function _getUserDetailInfo() {\r\n    getUserDetailInfo().then((res) => {\r\n      setUser(res[0]);\r\n    });\r\n  }\r\n  function handleItemChange(value, name) {\r\n    setUser({\r\n      ...user,\r\n      [name]: value,\r\n    });\r\n  }\r\n  // 上传头像组件\r\n  const Uploader = () => {\r\n    const props = {\r\n      name: \"avatar\",\r\n      action: uploadAvatarAction(),\r\n      listType: \"picture\",\r\n      maxCount: 1,\r\n      headers: {\r\n        Authorization: localStorage.getItem(\"token\"),\r\n      },\r\n      beforeUpload: (file) => {\r\n        if (file.type !== \"image/png\" && file.type !== \"image/jpeg\") {\r\n          message.error(`${file.name} 不是png或者jpeg`);\r\n        }\r\n        return file.type === \"image/png\" ? true : Upload.LIST_IGNORE;\r\n      },\r\n      onChange: (info) => {\r\n        console.log(info.fileList);\r\n      },\r\n    };\r\n    return (\r\n      <Upload {...props}>\r\n        <Button icon={<UploadOutlined />}>上传头像</Button>\r\n      </Upload>\r\n    );\r\n  };\r\n  function handleFormSubmit() {\r\n    console.log(user, userInfo.id);\r\n    updateUserInfo(userInfo.id, user).then((res) => {\r\n      console.log(res);\r\n      if (res.affectedRows) {\r\n        message.success(\"更新信息成功\");\r\n        _getUserDetailInfo();\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <FormWrapper>\r\n      <Form className=\"form\" {...layout} name=\"nest-messages\">\r\n        <Form.Item label=\"账号\">\r\n          <Input\r\n            value={user.name}\r\n            disabled\r\n            onChange={(e) => {\r\n              handleItemChange(e.target.value, \"name\");\r\n            }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"账号创建时间\">\r\n          <Input\r\n            value={moment(user.createAt).format(\"YYYY-MM-DD HH:mm:ss\")}\r\n            disabled\r\n            onChange={(e) => {\r\n              handleItemChange(e.target.value, \"createAt\");\r\n            }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"邮箱\">\r\n          <Input\r\n            value={user.email}\r\n            onChange={(e) => {\r\n              handleItemChange(e.target.value, \"email\");\r\n            }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"年龄\">\r\n          <InputNumber\r\n            value={user.age}\r\n            onChange={(e) => {\r\n              handleItemChange(e, \"age\");\r\n            }}\r\n          />{\" \"}\r\n        </Form.Item>\r\n        <Form.Item label=\"博客名\">\r\n          <Input\r\n            value={user.websiteName}\r\n            onChange={(e) => {\r\n              handleItemChange(e.target.value, \"websiteName\");\r\n            }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"QQ\">\r\n          <Input\r\n            value={user.qq}\r\n            onChange={(e) => {\r\n              handleItemChange(e.target.value, \"qq\");\r\n            }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"github\">\r\n          <Input\r\n            value={user.github}\r\n            onChange={(e) => {\r\n              handleItemChange(e.target.value, \"github\");\r\n            }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item name=\"upload\" label=\"头像\" valuePropName=\"filelist\">\r\n          <div className=\"avatar-box\">\r\n            {user.avatarUrl && <img src={`${user.avatarUrl}?t=${new Date().getTime()}`} alt=\"\" />}\r\n            <Uploader />\r\n          </div>\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n          <Button type=\"primary\" onClick={handleFormSubmit}>\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </FormWrapper>\r\n  );\r\n});\r\n","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\platform\\index.js",["186","187"],"import React, { memo, useEffect, useMemo, useState } from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport { renderRoutes } from \"react-router-config\";\r\nimport { Divider, Input, Menu, Button } from \"antd\";\r\nimport {\r\n  AppstoreOutlined,\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  PieChartOutlined,\r\n  DesktopOutlined,\r\n  ContainerOutlined,\r\n  MailOutlined,\r\n} from \"@ant-design/icons\";\r\n// hooks\r\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\";\r\nimport { changeUserInf } from \"@/store/actionCreator\";\r\nimport RouterAuth from \"@/hoc/router-auth\";\r\n// api\r\nimport { testTokenAuth } from \"@/api/user\";\r\nimport { PlatFormWrapper, Header, LeftMenu, CenterPage } from \"./style\";\r\nimport logo from \"@/assets/img/platform/logo.png\";\r\nexport default memo(function PlatForm(props) {\r\n  const [btnList] = useState([\"使用\", \"关于博客苗\"]);\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const { userInfo } = useSelector(\r\n    (state) => ({\r\n      userInfo: state.userInfo,\r\n    }),\r\n    [shallowEqual]\r\n  );\r\n  useEffect(() => {\r\n    testTokenAuth().then((res) => {\r\n      if (res.id) {\r\n        console.log('res',res);\r\n        // 如果校验通过\r\n        dispatch(changeUserInf(res));\r\n      }\r\n    });\r\n  }, []);\r\n  const selectedKeys = useMemo(() => props.location.pathname, [\r\n    props.location.pathname,\r\n  ]);\r\n  function handleMenuItemClick(e) {\r\n    console.log(e.key);\r\n    props.history.push(e.key);\r\n  }\r\n  function onSearch() {\r\n    console.log(\"搜索\");\r\n  }\r\n  function toggleCollapsed() {\r\n    setCollapsed(!collapsed);\r\n  }\r\n  function handleLogout() {\r\n    dispatch(changeUserInf(null));\r\n    localStorage.removeItem(\"token\");\r\n    props.history.push(\"/login\");\r\n  }\r\n  return (\r\n    <PlatFormWrapper>\r\n      <Header>\r\n        <div className=\"header_logo\">\r\n          <img src={logo} alt=\"miao\" />\r\n          <span className=\"website_name\">Miao Blob</span>\r\n        </div>\r\n        <Divider type=\"vertical\" className=\"header_divider\" />\r\n        <div className=\"search_box\">\r\n          <Input.Search\r\n            className=\"search_input\"\r\n            placeholder=\"input search text\"\r\n            onSearch={onSearch}\r\n            enterButton\r\n          />\r\n        </div>\r\n        <div className=\"top_btn\">\r\n          {btnList.map((item) => (\r\n            <div key={item} className=\"btn_item\">\r\n              {item}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"userinfo\">\r\n          <div className=\"account\">{userInfo && userInfo.name}</div>\r\n          <div className=\"info\">个人信息</div>\r\n          <div className=\"logout\" onClick={handleLogout}>\r\n            退出\r\n          </div>\r\n        </div>\r\n      </Header>\r\n      <div className=\"center\">\r\n        <LeftMenu>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={toggleCollapsed}\r\n            style={{ marginBottom: 10 }}\r\n          >\r\n            {React.createElement(\r\n              collapsed ? MenuUnfoldOutlined : MenuFoldOutlined\r\n            )}\r\n          </Button>\r\n          <Menu\r\n            selectedKeys={selectedKeys}\r\n            defaultOpenKeys={[\"/platform/article\", \"/platform/personality\"]}\r\n            mode=\"inline\"\r\n            theme=\"dark\"\r\n            inlineCollapsed={collapsed}\r\n            onClick={handleMenuItemClick}\r\n          >\r\n            <Menu.Item key=\"/platform/home\" icon={<PieChartOutlined />}>\r\n              个人信息\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/platform/use\" icon={<DesktopOutlined />}>\r\n              使用\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/platform/about\" icon={<ContainerOutlined />}>\r\n              关于博客苗\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/platform/privacy\" icon={<PieChartOutlined />}>\r\n              隐私设置\r\n            </Menu.Item>\r\n            <Menu.SubMenu\r\n              key=\"/platform/article\"\r\n              icon={<MailOutlined />}\r\n              title=\"文章管理\"\r\n            >\r\n              <Menu.Item key=\"/platform/article/blobList\">博客列表</Menu.Item>\r\n              <Menu.Item key=\"/platform/article/add\">新增文章</Menu.Item>\r\n            </Menu.SubMenu>\r\n            <Menu.SubMenu\r\n              key=\"/platform/personality\"\r\n              icon={<AppstoreOutlined />}\r\n              title=\"个性元素管理\"\r\n            >\r\n              <Menu.Item key=\"/platform/personality/bgMusic\">\r\n                背景音乐\r\n              </Menu.Item>\r\n              <Menu.Item key=\"/platform/personality/bgWall\">背景墙</Menu.Item>\r\n            </Menu.SubMenu>\r\n          </Menu>\r\n        </LeftMenu>\r\n        <CenterPage>\r\n          <Switch>\r\n            {/* <RouterAuth config={props.route.routes} /> */}\r\n            {renderRoutes(props.route.routes)}\r\n          </Switch>\r\n        </CenterPage>\r\n      </div>\r\n    </PlatFormWrapper>\r\n  );\r\n});\r\n","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\platform\\style.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\about\\index.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\privacy\\index.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\use\\index.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\article\\bloblist\\index.js",["188","189","190","191","192"],"import React, { memo, useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport PageHeader from \"@/components/page-header\";\r\nimport { Table, Tag, Space, Popconfirm, message, Badge } from \"antd\";\r\nimport { BlobListWrapper } from \"./style\";\r\nimport { getArticleList, delArticleById, validChange } from \"@/api/article\";\r\nexport default memo(function BlobList(props) {\r\n  const { Column } = Table;\r\n  const [data, setData] = useState([]);\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    pageSize: 10,\r\n    total: 0,\r\n    onChange: (page, pageSize) => {\r\n      console.log(pagination);\r\n      _getArticleList(page, pageSize);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    _getArticleList(1, pagination.pageSize);\r\n  }, []);\r\n  function _getArticleList(page, pageSize) {\r\n    console.log(page, pageSize);\r\n    getArticleList((page - 1) * pageSize, pageSize).then((res) => {\r\n      console.log(\"getArticleList\", res);\r\n      if (res?.list?.length > 0) {\r\n        setData(res.list);\r\n        setPagination({ ...pagination, current: page, total: res.total });\r\n      }\r\n    });\r\n  }\r\n  function hideArticle(id) {\r\n    validChange(id, 0).then((res) => {\r\n      console.log(\"validChange\", res);\r\n      message.success(\"已隐藏该文章\");\r\n      _getArticleList(pagination.current,pagination.pageSize);\r\n    });\r\n  }\r\n  function openArticle(id) {\r\n    validChange(id, 1).then((res) => {\r\n      console.log(\"validChange\", res);\r\n      message.success(\"已公开该文章\");\r\n      _getArticleList(pagination.current,pagination.pageSize);\r\n    });\r\n  }\r\n  function handleArticleDel(record) {\r\n    console.log(record);\r\n    delArticleById(record.id).then((res) => {\r\n      console.log(\"delArticleById\", res);\r\n      _getArticleList(pagination.current,pagination.pageSize);\r\n      message.success(\"删除成功\");\r\n    });\r\n  }\r\n\r\n  function goArticleDetail(id) {\r\n    console.log(\"go\");\r\n    props.history.push(`/platform/article/detail/${id}`);\r\n  }\r\n  return (\r\n    <BlobListWrapper>\r\n      <PageHeader title={props.route.name} />\r\n      <Table dataSource={data} pagination={pagination}>\r\n        <Column title=\"文章标题\" dataIndex=\"title\" key=\"title\" />\r\n        <Column\r\n          title=\"文章内容\"\r\n          dataIndex=\"content\"\r\n          key=\"content\"\r\n          render={(text) => (\r\n            <div className=\"article_content\" title={text}>\r\n              {text}\r\n            </div>\r\n          )}\r\n        />\r\n        <Column\r\n          title=\"更新时间\"\r\n          dataIndex=\"updateTime\"\r\n          key=\"updateTime\"\r\n          render={(text) => moment(text).format(\"YYYY-MM-DD HH:mm:ss\")}\r\n        />\r\n        <Column\r\n          title=\"标签\"\r\n          dataIndex=\"labels\"\r\n          key=\"labels\"\r\n          render={(labels) => (\r\n            <>\r\n              {labels &&\r\n                labels.map((label) => (\r\n                  <Tag color=\"blue\" key={label}>\r\n                    {label}\r\n                  </Tag>\r\n                ))}\r\n            </>\r\n          )}\r\n        />\r\n        <Column\r\n          title=\"隐私\"\r\n          dataIndex=\"valid\"\r\n          key=\"valid\"\r\n          render={(valid) => (\r\n            <>\r\n              {valid ? (\r\n                <div>\r\n                  {\" \"}\r\n                  <Badge status=\"success\" />\r\n                  已公开\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  {\" \"}\r\n                  <Badge status=\"error\" />\r\n                  已隐藏\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        />\r\n        <Column\r\n          title=\"操作\"\r\n          key=\"action\"\r\n          render={(text, record) => (\r\n            <Space size=\"middle\">\r\n              <a\r\n                onClick={() => {\r\n                  goArticleDetail(record.id);\r\n                }}\r\n              >\r\n                详情\r\n              </a>\r\n              {record.valid ? (\r\n                <a\r\n                  onClick={() => {\r\n                    hideArticle(record.id);\r\n                  }}\r\n                >\r\n                  隐藏\r\n                </a>\r\n              ) : (\r\n                <a\r\n                  onClick={() => {\r\n                    openArticle(record.id);\r\n                  }}\r\n                >\r\n                  公开\r\n                </a>\r\n              )}\r\n\r\n              <Popconfirm\r\n                title=\"确定删除这篇文章?\"\r\n                onConfirm={() => {\r\n                  handleArticleDel(record);\r\n                }}\r\n                okText=\"Yes\"\r\n                cancelText=\"No\"\r\n              >\r\n                <a href=\"#\">删除</a>\r\n              </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n    </BlobListWrapper>\r\n  );\r\n});\r\n","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\personality\\bgmusic\\index.js",["193","194"],"import React, { memo, useMemo, useEffect, useState } from \"react\";\r\nimport { Input, Spin, message, Divider, Empty } from \"antd\";\r\nimport PageHeader from \"@/components/page-header\";\r\nimport SongList from \"./song-list\";\r\nimport { BgMusicWrapper } from \"./style\";\r\nimport { getBgMusicId, getSearch } from \"@/api/persona\";\r\nexport default memo(function BgMusic(props) {\r\n  const { Search } = Input;\r\n  const [musicId, setMusicId] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [songList, setSongList] = useState([]);\r\n  const [searchMusicId, setSearchMusicId] = useState(null);\r\n  const [haveBgMusic, setHaveBgMusic] = useState(false);\r\n  useEffect(() => {\r\n    getBgMusicId().then((res) => {\r\n      console.log(res);\r\n      if (res.data === null) {\r\n        return;\r\n      }\r\n      setHaveBgMusic(true);\r\n      setMusicId(res.musicId);\r\n    });\r\n  }, []);\r\n\r\n  const musicUrl = useMemo(\r\n    () =>\r\n      `//music.163.com/outchain/player?type=2&id=${musicId}&auto=0&height=32`,\r\n    [musicId]\r\n  );\r\n  const searchMusicUrl = useMemo(\r\n    () =>\r\n      `//music.163.com/outchain/player?type=2&id=${searchMusicId}&auto=0&height=32`,\r\n    [searchMusicId]\r\n  );\r\n  function onSearch(value) {\r\n    setLoading(true);\r\n    console.log(value);\r\n    if (value === \"\") {\r\n      message.info(\"这是空白歌嘛，我识别不出~\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    getSearch(value).then((res) => {\r\n      console.log(\"getSearch\", res.result.songs);\r\n      setSongList(res.result.songs);\r\n      setLoading(false);\r\n    });\r\n  }\r\n  return (\r\n    <BgMusicWrapper>\r\n      <PageHeader title={props.route.name} />\r\n      <Divider orientation=\"left\" plain>\r\n        我的背景乐\r\n      </Divider>\r\n      {haveBgMusic ? (\r\n        <iframe\r\n          frameBorder=\"no\"\r\n          border=\"0\"\r\n          marginWidth=\"0\"\r\n          marginHeight=\"0\"\r\n          width=\"200\"\r\n          height=\"52\"\r\n          src={musicUrl}\r\n        ></iframe>\r\n      ) : (\r\n        <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n      )}\r\n      <Divider orientation=\"left\" plain>\r\n        音乐馆/试听区\r\n      </Divider>\r\n      {searchMusicId && (\r\n        <iframe\r\n          frameBorder=\"no\"\r\n          border=\"0\"\r\n          marginWidth=\"0\"\r\n          marginHeight=\"0\"\r\n          width=\"200\"\r\n          height=\"52\"\r\n          src={searchMusicUrl}\r\n        ></iframe>\r\n      )}\r\n\r\n      <Search\r\n        placeholder=\"这里可以搜索到你喜欢的音乐奥\"\r\n        enterButton=\"Search\"\r\n        size=\"large\"\r\n        loading={loading}\r\n        onSearch={onSearch}\r\n      />\r\n      <div className=\"search-result-box\">\r\n        <Spin spinning={loading}>\r\n          <SongList\r\n            songList={songList}\r\n            haveBgMusic={haveBgMusic}\r\n            setSearchMusic={(id) => {\r\n              setSearchMusicId(id);\r\n            }}\r\n            setBgMusic={(id) => {\r\n              setMusicId(id);\r\n              setHaveBgMusic(true);\r\n            }}\r\n          />\r\n        </Spin>\r\n      </div>\r\n    </BgMusicWrapper>\r\n  );\r\n});\r\n","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\personality\\bgwall\\index.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\hoc\\router-auth\\index.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\not-found\\index.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\api\\user.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\api\\request.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\api\\config.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\store\\constants.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\store\\actionCreator.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\home\\style.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\components\\page-header\\index.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\components\\page-header\\style.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\article\\add-article\\index.js",["195","196","197","198","199","200"],"import React, { memo, useCallback, useEffect, useState, useRef } from \"react\";\r\nimport SimpleMDE from \"simplemde\";\r\nimport DOMPurify from \"dompurify\";\r\nimport { Input, Button, message, Tag, Tooltip } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport PageHeader from \"@/components/page-header\";\r\nimport PicUpload from \"@/components/pic-upload\";\r\nimport \"simplemde/dist/simplemde.min.css\";\r\n// import ' /css/font-awesome.min.css';\r\nimport { AddArticleWrapper } from \"./style\";\r\n\r\nimport { createArticle, relaMomentToLabel } from \"@/api/article\";\r\nimport { createLabel } from \"@/api/label\";\r\n\r\nexport default memo(function AddArticle(props) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [fileList, setFileList] = useState([]);\r\n  // const [mdHtml, setMdHtml] = useState(\"\");\r\n  const [md, setMd] = useState(\"\");\r\n  const [chooseLabels, setChooseLabels] = useState([]);\r\n  const [inputVisible, setInputVisible] = useState(false);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [editInputIndex, setEditInputIndex] = useState(-1);\r\n  const [editInputValue, setEditInputValue] = useState(\"\");\r\n  const inputEl = useRef(null);\r\n  const editInputEl = useRef(null);\r\n  const init = useCallback(() => {\r\n    const simplemde = new SimpleMDE({\r\n      renderingConfig: {\r\n        markedOptions: {\r\n          sanitize: true,\r\n        },\r\n      },\r\n      element: document.getElementById(\"md-editor\"),\r\n      //   autoDownloadFontAwesome: false,\r\n      initialValue: \"\",\r\n      showIcons: [\"code\", \"table\", \"horizontal-rule\"],\r\n      insertTexts: {\r\n        horizontalRule: [\"\", \"\\n\\n-----\\n\\n\"],\r\n        image: [\"![](http://\", \")\"],\r\n        link: [\"[\", \"](http://)\"],\r\n        table: [\r\n          \"\",\r\n          \"\\n\\n| Column 1 | Column 2 | Column 3 |\\n| -------- | -------- | -------- |\\n| Text     | Text      | Text     |\\n\\n\",\r\n        ],\r\n      },\r\n    });\r\n\r\n    // need to use the default rendering routine\r\n    /*  simplemde.options.previewRender = function (plainText) {\r\n      return DOMPurify.sanitize(simplemde.markdown(plainText));\r\n    }; */\r\n\r\n    /*  if (this.value) {\r\n      simplemde.value(this.value);\r\n    } */\r\n    simplemde.codemirror.on(\"change\", (newVal) => {\r\n      /*    if (this.hasChange) {\r\n        this.hasChange = true;\r\n      } */\r\n      console.log(simplemde.value());\r\n      // const html = simplemde.markdown(simplemde.value());\r\n      setMd(simplemde.value());\r\n    });\r\n  }, [SimpleMDE]);\r\n  const handleTitleChange = useCallback((e) => {\r\n    setTitle(e.target.value);\r\n  });\r\n  const handleImgListChange = useCallback((files) => {\r\n    console.log(\"收到啦\", files);\r\n    setFileList(files);\r\n  });\r\n  const handleArticleSubmit = useCallback(() => {\r\n    console.log(title, md, fileList);\r\n    if (title !== \"\" && md !== \"\") {\r\n      _createArticle(title, md,fileList);\r\n    }else {\r\n      message.info(\"文章标题和正文不能为空奥\");\r\n    }\r\n  }, [_createArticle]);\r\n  const handleEditInputChange = (e) => {\r\n    setEditInputValue(e.target.value);\r\n  };\r\n  const handleEditInputConfirm = () => {\r\n    const newTags = [...chooseLabels];\r\n    newTags[editInputIndex] = editInputValue;\r\n    setChooseLabels(newTags);\r\n    setEditInputIndex(-1);\r\n    setEditInputValue(\"\");\r\n  };\r\n  const handleClose = (removedTag) => {\r\n    const tags = chooseLabels.filter((tag) => tag !== removedTag);\r\n    console.log(tags);\r\n    setChooseLabels(tags);\r\n  };\r\n  const showInput = async () => {\r\n    await setInputVisible(true);\r\n    inputEl.current.focus();\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleInputConfirm = () => {\r\n    let tags = chooseLabels;\r\n    if (inputValue && chooseLabels.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    console.log(tags);\r\n\r\n    setChooseLabels(tags);\r\n    setInputVisible(false);\r\n    setInputValue(\"\");\r\n  };\r\n  function _createArticle(title, content,fileList) {\r\n    createArticle(title, content,fileList).then((res) => {\r\n      console.log(res);\r\n      if (res.data) {\r\n        const articleId = res.data; // 文章id\r\n        console.log(chooseLabels);\r\n        // 创建标签\r\n        createLabel({ labels: chooseLabels }).then((res) => {\r\n          console.log(\"createArticle\", res);\r\n          const labelIds = res.ids;\r\n          // 将文章与标签做关联操作\r\n          relaMomentToLabel(articleId, labelIds).then((res) => {\r\n            console.log(res);\r\n            message.success(\"文章发布成功\");\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    init();\r\n  }, []);\r\n  return (\r\n    <AddArticleWrapper>\r\n      <PageHeader title={props.route.name} />\r\n      <div className=\"article-title\">\r\n        <Input\r\n          style={{ fontWeight: 700 }}\r\n          placeholder=\"输入文章标题...\"\r\n          bordered={false}\r\n          onChange={handleTitleChange}\r\n        />\r\n      </div>\r\n      <textarea id=\"md-editor\" defaultValue=\"\" />\r\n      <div className=\"article-pic\">\r\n        <PicUpload handleImgListChange={(list) => handleImgListChange(list)} />\r\n      </div>\r\n      {chooseLabels.map((tag, index) => {\r\n        if (editInputIndex === index) {\r\n          return (\r\n            <Input\r\n              ref={editInputEl}\r\n              key={tag}\r\n              size=\"small\"\r\n              className=\"tag-input\"\r\n              value={editInputValue}\r\n              onChange={handleEditInputChange}\r\n              onBlur={handleEditInputConfirm}\r\n              onPressEnter={handleEditInputConfirm}\r\n            />\r\n          );\r\n        }\r\n\r\n        const isLongTag = tag.length > 20;\r\n\r\n        const tagElem = (\r\n          <Tag\r\n            className=\"edit-tag\"\r\n            key={tag}\r\n            closable={index !== -1}\r\n            onClose={() => handleClose(tag)}\r\n          >\r\n            <span\r\n              onDoubleClick={async (e) => {\r\n                if (index !== 0) {\r\n                  /*   this.setState(\r\n                                { editInputIndex: index, editInputValue: tag },\r\n                                () => {\r\n                                  this.editInput.focus();\r\n                                }\r\n                              ); */\r\n                  await setEditInputIndex(index);\r\n                  await setEditInputValue(tag);\r\n                  editInputEl.current.focus();\r\n                  // e.preventDefault();\r\n                }\r\n              }}\r\n            >\r\n              {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n            </span>\r\n          </Tag>\r\n        );\r\n        return isLongTag ? (\r\n          <Tooltip title={tag} key={tag}>\r\n            {tagElem}\r\n          </Tooltip>\r\n        ) : (\r\n          tagElem\r\n        );\r\n      })}\r\n      {inputVisible && (\r\n        <Input\r\n          ref={inputEl}\r\n          type=\"text\"\r\n          size=\"small\"\r\n          className=\"tag-input\"\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n          onBlur={handleInputConfirm}\r\n          onPressEnter={handleInputConfirm}\r\n        />\r\n      )}\r\n      {!inputVisible && (\r\n        <Tag className=\"site-tag-plus\" onClick={showInput}>\r\n          <PlusOutlined />\r\n          新建标签\r\n        </Tag>\r\n      )}\r\n      <div className=\"form-btn\">\r\n        <Button type=\"primary\" onClick={handleArticleSubmit}>\r\n          发布\r\n        </Button>\r\n      </div>\r\n    </AddArticleWrapper>\r\n  );\r\n});\r\n","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\article\\add-article\\style.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\api\\article.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\article\\bloblist\\style.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\api\\label.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\article\\detail\\index.js",["201","202","203","204","205","206","207"],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\article\\detail\\style.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\article\\detail\\article-render\\index.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\article\\detail\\article-render\\style.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\article\\detail\\heading-block\\index.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\article\\detail\\heading\\index.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\components\\pic-upload\\index.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\privacy\\style.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\api\\persona.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\personality\\bgmusic\\style.js",[],"G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\personality\\bgmusic\\song-list\\index.js",["208","209"],"import React, { memo, useEffect, useMemo, useState } from \"react\";\r\nimport { Empty, Button, message } from \"antd\";\r\nimport { RedditOutlined, PlayCircleOutlined } from \"@ant-design/icons\";\r\nimport { SongListWrapper } from \"./style\";\r\nimport { setupBgMusic, createBgMusic } from \"@/api/persona\";\r\nexport default memo(function SongList(props) {\r\n  const [listenLoadingList, setListenLoadingList] = useState([]);\r\n  useEffect(() => {\r\n    console.log(\"我是\", props.songList);\r\n    setListenLoadingList(\r\n      Array.from({ length: props.songList.length }, () => {\r\n        return false;\r\n      })\r\n    );\r\n  }, [props.songList]);\r\n  function handleMusicPlay(id, index) {\r\n    console.log(\"试听：\", id);\r\n    let newList = Array.from({ length: props.songList.length }, (_, indey) => {\r\n      if (index === indey) {\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n    setListenLoadingList(newList);\r\n    props.setSearchMusic(id);\r\n  }\r\n  function _setupBgMusic(id) {\r\n    if (props.haveBgMusic) {\r\n      setupBgMusic(id).then((res) => {\r\n        console.log(\"setupBgMusic\", res);\r\n        if (res.result) {\r\n          message.success(\"背景乐修改成功\");\r\n          props.setBgMusic(id);\r\n        }\r\n      });\r\n    } else {\r\n      createBgMusic(id).then((res) => {\r\n        console.log(\"createBgMusic\", res);\r\n        if (res.result) {\r\n          message.success(\"背景乐设置成功\");\r\n          props.setBgMusic(id);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <SongListWrapper>\r\n      {props.songList.length > 0 ? (\r\n        props.songList.map((item, index) => {\r\n          return (\r\n            <div className=\"song-item\">\r\n              <div className=\"left-info\">\r\n                <div className=\"number\">{index + 1}</div>\r\n                <img src={item.artists[0].img1v1Url} />\r\n                <div className=\"song-box\">\r\n                  <div className=\"song-name\">{item.name}</div>\r\n                  <div className=\"song-artists\">\r\n                    {item.artists.map((citem, index) => {\r\n                      if (index < item.artists.length - 1) {\r\n                        return citem.name + \"/\";\r\n                      }\r\n                      return citem.name;\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"right-btn\">\r\n                <Button\r\n                  type=\"default\"\r\n                  icon={<PlayCircleOutlined />}\r\n                  loading={listenLoadingList[index]}\r\n                  onClick={() => handleMusicPlay(item.id, index)}\r\n                >\r\n                  试听\r\n                </Button>\r\n                <Button type=\"primary\" onClick={() => _setupBgMusic(item.id)}>\r\n                  设置成背景乐\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <div style={{ marginTop: \"100px\" }}>\r\n          <Empty />\r\n        </div>\r\n      )}\r\n      {props.songList.length > 0 && (\r\n        <div className=\"list-footer\">\r\n          <RedditOutlined />\r\n          <span>到底啦~</span>\r\n        </div>\r\n      )}\r\n    </SongListWrapper>\r\n  );\r\n});\r\n","G:\\毕业设计\\代码\\前端\\blob-admin\\src\\pages\\personality\\bgmusic\\song-list\\style.js",[],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":7,"column":8,"nodeType":"216","messageId":"217","endLine":7,"endColumn":18},{"ruleId":"214","severity":1,"message":"218","line":6,"column":29,"nodeType":"216","messageId":"217","endLine":6,"endColumn":41},{"ruleId":"214","severity":1,"message":"215","line":17,"column":8,"nodeType":"216","messageId":"217","endLine":17,"endColumn":18},{"ruleId":"219","severity":1,"message":"220","line":40,"column":6,"nodeType":"221","endLine":40,"endColumn":8,"suggestions":"222"},{"ruleId":"219","severity":1,"message":"223","line":22,"column":6,"nodeType":"221","endLine":22,"endColumn":8,"suggestions":"224"},{"ruleId":"225","severity":1,"message":"226","line":123,"column":15,"nodeType":"227","endLine":127,"endColumn":16},{"ruleId":"225","severity":1,"message":"226","line":131,"column":17,"nodeType":"227","endLine":135,"endColumn":18},{"ruleId":"225","severity":1,"message":"226","line":139,"column":17,"nodeType":"227","endLine":143,"endColumn":18},{"ruleId":"225","severity":1,"message":"228","line":156,"column":17,"nodeType":"227","endLine":156,"endColumn":29},{"ruleId":"229","severity":1,"message":"230","line":56,"column":9,"nodeType":"227","endLine":64,"endColumn":10},{"ruleId":"229","severity":1,"message":"230","line":72,"column":9,"nodeType":"227","endLine":80,"endColumn":10},{"ruleId":"214","severity":1,"message":"231","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":17},{"ruleId":"219","severity":1,"message":"232","line":65,"column":6,"nodeType":"221","endLine":65,"endColumn":17,"suggestions":"233"},{"ruleId":"219","severity":1,"message":"234","line":66,"column":29,"nodeType":"216","endLine":66,"endColumn":40},{"ruleId":"219","severity":1,"message":"234","line":69,"column":31,"nodeType":"216","endLine":69,"endColumn":42},{"ruleId":"219","severity":1,"message":"235","line":80,"column":6,"nodeType":"221","endLine":80,"endColumn":22,"suggestions":"236"},{"ruleId":"219","severity":1,"message":"237","line":136,"column":6,"nodeType":"221","endLine":136,"endColumn":8,"suggestions":"238"},{"ruleId":"219","severity":1,"message":"239","line":34,"column":6,"nodeType":"221","endLine":34,"endColumn":8,"suggestions":"240"},{"ruleId":"219","severity":1,"message":"241","line":43,"column":5,"nodeType":"221","endLine":43,"endColumn":26,"suggestions":"242"},{"ruleId":"219","severity":1,"message":"243","line":53,"column":5,"nodeType":"221","endLine":53,"endColumn":21,"suggestions":"244"},{"ruleId":"219","severity":1,"message":"234","line":55,"column":23,"nodeType":"216","endLine":55,"endColumn":34},{"ruleId":"219","severity":1,"message":"234","line":66,"column":23,"nodeType":"216","endLine":66,"endColumn":34},{"ruleId":"225","severity":1,"message":"226","line":88,"column":15,"nodeType":"227","endLine":88,"endColumn":18},{"ruleId":"225","severity":1,"message":"228","line":184,"column":11,"nodeType":"227","endLine":190,"endColumn":12},{"ruleId":"214","severity":1,"message":"245","line":1,"column":34,"nodeType":"216","messageId":"217","endLine":1,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":54,"column":17,"nodeType":"227","endLine":54,"endColumn":56},"no-native-reassign",["248"],"no-negated-in-lhs",["249"],"no-unused-vars","'RouterAuth' is defined but never used.","Identifier","unusedVar","'getAvatarUrl' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["250"],"React Hook useEffect has missing dependencies: '_getArticleList' and 'pagination.pageSize'. Either include them or remove the dependency array.",["251"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'DOMPurify' is defined but never used.","React Hook useCallback has an unnecessary dependency: 'SimpleMDE'. Either exclude it or remove the dependency array. Outer scope values like 'SimpleMDE' aren't valid dependencies because mutating them doesn't re-render the component.",["252"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useCallback has missing dependencies: 'fileList', 'md', and 'title'. Either include them or remove the dependency array.",["253"],"React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["254"],"React Hook useEffect has missing dependencies: '_getCommentList', '_getrticleDetail', and 'props.match.params.id'. Either include them or remove the dependency array.",["255"],"React Hook useCallback has an unnecessary dependency: 'getrticleDetailById'. Either exclude it or remove the dependency array. Outer scope values like 'getrticleDetailById' aren't valid dependencies because mutating them doesn't re-render the component.",["256"],"React Hook useCallback has an unnecessary dependency: 'getCommentList'. Either exclude it or remove the dependency array. Outer scope values like 'getCommentList' aren't valid dependencies because mutating them doesn't re-render the component.",["257"],"'useMemo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"262","fix":"270"},{"desc":"262","fix":"271"},"Update the dependencies array to be: [dispatch]",{"range":"272","text":"273"},"Update the dependencies array to be: [_getArticleList, pagination.pageSize]",{"range":"274","text":"275"},"Update the dependencies array to be: []",{"range":"276","text":"277"},"Update the dependencies array to be: [_createArticle, fileList, md, title]",{"range":"278","text":"279"},"Update the dependencies array to be: [init]",{"range":"280","text":"281"},"Update the dependencies array to be: [_getCommentList, _getrticleDetail, props.match.params.id]",{"range":"282","text":"283"},{"range":"284","text":"277"},{"range":"285","text":"277"},[1266,1268],"[dispatch]",[751,753],"[_getArticleList, pagination.pageSize]",[2444,2455],"[]",[2900,2916],"[_createArticle, fileList, md, title]",[4534,4536],"[init]",[924,926],"[_getCommentList, _getrticleDetail, props.match.params.id]",[1179,1200],[1417,1433]]